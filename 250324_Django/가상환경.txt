이론적인 필기보다는 코드 중심으로 따라가기
다시보기 많이 보기

웹은 요청과 응답으로 이루어짐(네트워크의 기본)
클라이언트<->서버

웹서비스 개발, 웹 어플리케이션

모든 기능을 직접 개발하는 게 아니라 잘 만들어진 도구를 내 프로젝트에 맞게 잘 활용하는 것이 관건
"거인의 어깨 위에서 프로그래밍하기"

목적: Django를 통해 서버 구현

#1. 가상환경: 한 컴퓨터 안에서 독립된 파이썬 환경, 독립적인 개발환경 마련

1. 가상 환경 생성
  $ python -m venv (가상환경 만들겠다) venv(가상환경 이름)
  현재 디렉토리에 venv라는 가상환경 폴더 생성
  폴더 안에 파이썬 실행파일, 라이브러리 담을 공간 마련
  관례적으로 venv라는 이름 사용

2. 가상 환경 활성화

  $ source venv/Scripts/activate
  venv 폴더안에 scripts파일 활성화

3. 설치 목록 확인

4. djago 설치

5. 
  윈도우, MAC, 리눅스 별로 명령어가 다 다름
  활성화 되면 명령어마다 뱃지가 따라다님

3. 가상 환경 종료
  $ deactivate

#2. 의존성

패키지 하나 설치한다고 해서 그것만 설치되지 않음
그것과 관련된 의존성 패키지들이 같이 설치됨 

1. 패키지 목록 확인
  $ pip list

2. 의존성 기록 텍스트 파일로 추출하기
  $ pip freeze > requirements.txt
  왜 만드나? -> 동일 프로젝트를 하는데 팀원 별로 컴퓨터가 달라서 환경(어떤 패키지, 어떤 버전 설치 정보)이 다름.
                각자 가상환경을 맞추기 위해서 설치 목록을 공유
                의존성 기록 파일은 관례적으로 requirements.txt 만 사용!

3. requirements.txt로부터 패키지 설치
  $ pip install -r requirements.txt

  가상환경만들고 패키지와 버전 맞춰주고 실습!

주의사항
  -가상환경에 들어가고 나오는 것이 아니라 python환경을 on/off 하는 개념
  - 새 터미널마다 다시 활성화해야 함
  - 가상환경 폴더는 프로젝트와 동일한 경로(디렉토리)에 위치시킴
  - 폴더 venv는 .gitignore 파일에 작성되어 원격 저장소에 공유되지 않아야 함
    대신 requirements.txt 공유
  

