1. Django 설치
  $ pip install django

2. 프로젝트 생성
 $ django-admin startproject(장고 프로젝트 만들거다는 의미) firstpjt(프로젝트 이름) .(현재 디렉토리)

3. 서버 실행
  $ python manage.py(경로) runserver

4. 앱폴더 생성
$ python manage.py startapp <앱명 articles>

5. 앱 등록
project 폴더의 settings.py 파일에서 INSTALLED_APPS에 등록. 'articles', 추가!

6. 웹서비스 개발 시작
  1. URL 등록
  2. views에 함수를 만든다
  3. 앱의 templates 라는 폴더에 html을 만든다

  사용자가 '~~/articles/ 쓰면,     프로젝트 폴더의 urls.py에서!
  views의 index 함수를 호출 ,
  호출하면 index.html을 요청한 클라이언트에게 보내줌

  ~~/articles/list/
  views에 list_article 함수 호출
  list_article.html을 사용자에게 보내줌줌
  
  ~~~/ 만 쳐도
  views에 index
4. Django Design Pattern

디자인 패턴이란?
  소프트웨어 설계에서 발생하는 문제를 해결하기 위한 일반적인 해결책
  애플리케이션의 구조 관행

  MVC 디자인 패턴(MODEL, VIEW, CONTROLLER)
    데이터, 사용자 인터페이스, 비즈니스 로직
  
  MTV 디자인 패턴(MODEL, TEMPLATE, VIEW)
    MVC패턴이랑 구조적으로 동일하나 이름만 바뀐 것

django project -> 애플리케이션의 집합 / 애플리케이션은 독립적으로 작동하는 기능 단위 모듈

앱을 사용하기 위한 순서
  1. 앱 생성 (앱 이름은 복수형으로 지정하는 것을 권장)
  2. 앱 등록 (문자열로!)

views.py
  HTTP 요청을 처리하고 해당 요청에 대한 응답을 반환(url, model, template과 연계)

url 주소 쓸 때 '/'로 끝나야 함